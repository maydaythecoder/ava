/**
 * Task Management Types
 * Types for tasks, subtasks, and task workflows
 */

export type TaskId = string;

export type TaskStatus = 
  | 'todo'
  | 'in-progress'
  | 'blocked'
  | 'review'
  | 'done'
  | 'cancelled';

export type TaskPriority = 'low' | 'medium' | 'high' | 'urgent';

export interface Task {
  id: TaskId;
  workspaceId: string;
  title: string;
  description?: string;
  status: TaskStatus;
  priority: TaskPriority;
  assigneeId?: string;
  createdBy: string;
  parentTaskId?: TaskId;
  subtasks?: TaskId[];
  dueDate?: Date;
  estimatedHours?: number;
  actualHours?: number;
  tags?: string[];
  relatedFiles?: string[]; // FileNodeIds
  relatedViolations?: string[]; // RuleViolation IDs
  metadata: TaskMetadata;
  createdAt: Date;
  updatedAt: Date;
  completedAt?: Date;
}

export interface TaskMetadata {
  source: 'manual' | 'auto-generated' | 'violation-fix';
  autoGenerated?: {
    parentTaskId: TaskId;
    strategy: 'breakdown' | 'dependency' | 'parallel';
  };
  blockers?: TaskBlocker[];
  dependencies?: TaskId[];
  customFields?: Record<string, any>;
}

export interface TaskBlocker {
  id: string;
  type: 'dependency' | 'compliance' | 'resource' | 'other';
  description: string;
  blockingTaskId?: TaskId;
  blockingViolationId?: string;
  resolvedAt?: Date;
}

export interface TaskTemplate {
  id: string;
  name: string;
  description: string;
  category: string;
  defaultPriority: TaskPriority;
  subtaskTemplates?: SubtaskTemplate[];
  estimatedHours?: number;
  requiredFields?: string[];
}

export interface SubtaskTemplate {
  title: string;
  description?: string;
  order: number;
  estimatedHours?: number;
  dependencies?: number[]; // indices of other subtasks
}

export interface TaskComment {
  id: string;
  taskId: TaskId;
  userId: string;
  content: string;
  mentions?: string[]; // user IDs
  createdAt: Date;
  updatedAt?: Date;
  isEdited: boolean;
}

export interface TaskActivity {
  id: string;
  taskId: TaskId;
  userId: string;
  action: TaskAction;
  changes?: Record<string, { old: any; new: any }>;
  timestamp: Date;
}

export type TaskAction =
  | 'created'
  | 'updated'
  | 'status-changed'
  | 'assigned'
  | 'commented'
  | 'completed'
  | 'reopened'
  | 'deleted';

